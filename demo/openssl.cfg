###############################################################################
# OpenSSL[bee2evp] configuration file
###############################################################################

HOME = .
RANDFILE = $ENV::HOME/.rnd
openssl_conf = openssl_init

[openssl_init]
oid_section = new_oids
engines = engine_section

[engine_section]
bee2evp = bee2evp_section

[bee2evp_section]
engine_id = bee2evp
dynamic_path = ./bee2evp.dll
default_algorithms = ALL

[new_oids]
organizationIdentifier = 2.5.4.97
bpki = 1.2.112.0.2.0.34.101.78
bpki-role-ca0 = ${bpki}.2.0
bpki-role-ca1 = ${bpki}.2.1
bpki-role-ca2 = ${bpki}.2.2
bpki-role-aa  = ${bpki}.2.10
bpki-role-ra = ${bpki}.2.20
bpki-role-ocsp = ${bpki}.2.30
bpki-role-tsa = ${bpki}.2.31
bpki-role-dvcs = ${bpki}.2.32
# identification servers
bpki-role-ids = ${bpki}.2.33
bpki-role-tls = ${bpki}.2.50
# natural persons
bpki-role-np = ${bpki}.2.60
# foreign natural persons
bpki-role-fnp = ${bpki}.2.61
# legal representatives
bpki-role-lr = ${bpki}.2.62
# autonomous cryptographic devices
bpki-role-acd = ${bpki}.2.70
# server of Terminal Mode
bpki-eku-serverTM = ${bpki}.3.1
# client of Terminal Mode
bpki-eku-clientTM = ${bpki}.3.2

[ca0]
dir = ./out/ca0
database = $dir/index.txt
new_certs_dir = $dir/certs
serial = $dir/serial
private_key = ./out/ca0/privkey_ca0
certificate = ./out/ca0/cert_ca0
default_days = 7300
default_crl_days = 10
default_md = bash512
policy = policy_ca0
copy_extensions = none
unique_subject = no
preserve = yes # keep passed DN ordering
email_in_dn = no

[ca1]
dir = ./out/ca1
database = $dir/index.txt
new_certs_dir = $dir/certs
serial = $dir/serial
private_key = ./out/ca1/privkey_ca1
certificate = ./out/ca1/cert_ca1
default_days = 1825
default_crl_days = 10
default_md = bash384
policy = policy_ca1
copy_extensions = copyall
unique_subject = no
preserve = yes
email_in_dn = no

[ca2]
dir = ./out/ca2
database = $dir/index.txt
new_certs_dir = $dir/certs
serial = $dir/serial
private_key = ./out/ca2/privkey_ca2
certificate = ./out/ca2/cert_ca2
default_days = 1825
default_crl_days = 30
default_md = belt-hash
policy = policy_anything
copy_extensions = copy
unique_subject = no
preserve = yes
email_in_dn = no

[policy_ca0]
commonName = supplied
name = supplied
countryName	= match
localityName = supplied
stateOrProvinceName	= optional
streetAddress = supplied
organizationName = supplied
organizationalUnitName = optional
#organizationalIdentifier = supplied

[policy_ca1]
commonName = supplied
surname = optional
name = optional
givenName = optional
serialNumber = optional
countryName	= match
localityName = optional
stateOrProvinceName	= optional
streetAddress = optional
organizationName = optional
organizationalUnitName = optional
#organizationalIdentifier = optional

[policy_ca2]
commonName = supplied
surname = supplied
givenName = supplied
serialNumber = supplied
countryName	= match

####################################################################
[ req ]
default_bits		= 256
default_keyfile 	= privkey.pem
attributes		= req_attributes
x509_extensions	= v3_ca	# The extentions to add to the self signed cert

# Passwords for private keys if not present they will be prompted for
# input_password = secret
# output_password = secret

# This sets a mask for permitted string types. There are several options. 
# default: PrintableString, T61String, BMPString.
# pkix	 : PrintableString, BMPString (PKIX recommendation before 2004)
# utf8only: only UTF8Strings (PKIX recommendation after 2004).
# nombstr : PrintableString, T61String (no BMPStrings or UTF8Strings).
# MASK:XXXX a literal mask value.
# WARNING: ancient versions of Netscape crash on BMPStrings or UTF8Strings.
string_mask = utf8only

req_extensions = v3_req # The extensions to add to a certificate request

[ req_distinguished_name ]
countryName = Country Name (2 letter code)
countryName_default		= BY
countryName_min			= 2
countryName_max			= 2

stateOrProvinceName		= State or Province Name (full name)
stateOrProvinceName_default	= Belarus

localityName			= Minsk

0.organizationName		= Organization Name (eg, company)
0.organizationName_default	= BSU

# we can do this but it is not needed normally :-)
1.organizationName		= Second Organization Name (eg, company)
1.organizationName_default	= World Wide Web Pty Ltd

organizationalUnitName		= Organizational Unit Name (eg, section)
organizationalUnitName_default	= APMI

commonName				= PBIT
commonName_max			= 64

emailAddress			= apmi@bsu.by
emailAddress_max		= 64

surname					= Ivanov
surname_max				= 64

givenname				= Ivan
givenname_max			= 64

name					= Ivanovich
name_max				= 64

# SET-ex3			= SET extension number 3

[ req_attributes ]
challengePassword		= A challenge password
challengePassword_min		= 4
challengePassword_max		= 20
signingTime = 

unstructuredName		= An optional company name

[ usr_cert ]

# These extensions are added when 'ca' signs a request.

# This goes against PKIX guidelines but some CAs do it and some software
# requires this to avoid interpreting an end user certificate as a CA.

basicConstraints=CA:FALSE

# Here are some examples of the usage of nsCertType. If it is omitted
# the certificate can be used for anything *except* object signing.

# This is OK for an SSL server.
# nsCertType			= server

# For an object signing certificate this would be used.
# nsCertType = objsign

# For normal client use this is typical
# nsCertType = client, email

# and for everything including object signing:
# nsCertType = client, email, objsign

# This is typical in keyUsage for a client certificate.
keyUsage = nonRepudiation, digitalSignature
# keyUsage = nonRepudiation, digitalSignature, keyEncipherment

# This will be displayed in Netscape's comment listbox.
#nsComment			= "OpenSSL Generated Certificate"

# PKIX recommendations harmless if included in all certificates.
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer

# This stuff is for subjectAltName and issuerAltname.
# Import the email address.
# subjectAltName=email:copy
# An alternative to produce certificates that aren't
# deprecated according to PKIX.
# subjectAltName=email:move

# Copy subject details
# issuerAltName=issuer:copy

#nsCaRevocationUrl		= http://www.domain.dom/ca-crl.pem
#nsBaseUrl
#nsRevocationUrl
#nsRenewalUrl
#nsCaPolicyUrl
#nsSslServerName

# This is required for TSA certificates.
extendedKeyUsage = critical,timeStamping,emailProtection

[ v3_req ]

# Extensions to add to a certificate request

basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
subjectAltName = @alt_names

[alt_names]
DNS.1 = kb.example.com
DNS.2 = helpdesk.example.org
DNS.3 = systems.example.net
IP.1 = 192.168.1.1
IP.2 = 192.168.69.14
#otherName:1.2.3.4;UTF8:Root

[ v3_ca ]


# Extensions for a typical CA


# PKIX recommendation.

subjectKeyIdentifier=hash

authorityKeyIdentifier=keyid:always,issuer

# This is what PKIX recommends but some broken software chokes on critical
# extensions.
#basicConstraints = critical,CA:true
# So we do this instead.
basicConstraints = CA:true

# Key usage: this is typical for a CA certificate. However since it will
# prevent it being used as an test self-signed certificate it is best
# left out by default.
keyUsage = cRLSign, keyCertSign

# Some might want this also
# nsCertType = sslCA, emailCA

# Include email address in subject alt name: another PKIX recommendation
# subjectAltName=email:copy
# Copy issuer details
# issuerAltName=issuer:copy

# DER hex encoding of an extension: beware experts only!
# obj=DER:02:03
# Where 'obj' is a standard or added object
# You can even override a supported extension:
# basicConstraints= critical, DER:30:03:01:01:FF

[ crl_ext ]

# CRL extensions.
# Only issuerAltName and authorityKeyIdentifier make any sense in a CRL.

# issuerAltName=issuer:copy
authorityKeyIdentifier=keyid:always

[ proxy_cert_ext ]
# These extensions should be added when creating a proxy certificate

# This goes against PKIX guidelines but some CAs do it and some software
# requires this to avoid interpreting an end user certificate as a CA.

basicConstraints=CA:FALSE

# Here are some examples of the usage of nsCertType. If it is omitted
# the certificate can be used for anything *except* object signing.

# This is OK for an SSL server.
# nsCertType			= server

# For an object signing certificate this would be used.
# nsCertType = objsign

# For normal client use this is typical
# nsCertType = client, email

# and for everything including object signing:
# nsCertType = client, email, objsign

# This is typical in keyUsage for a client certificate.
keyUsage = nonRepudiation, digitalSignature, keyEncipherment

# This will be displayed in Netscape's comment listbox.
nsComment			= "OpenSSL Generated Certificate"

# PKIX recommendations harmless if included in all certificates.
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer

# This stuff is for subjectAltName and issuerAltname.
# Import the email address.
# subjectAltName=email:copy
# An alternative to produce certificates that aren't
# deprecated according to PKIX.
# subjectAltName=email:move

# Copy subject details
# issuerAltName=issuer:copy

#nsCaRevocationUrl		= http://www.domain.dom/ca-crl.pem
#nsBaseUrl
#nsRevocationUrl
#nsRenewalUrl
#nsCaPolicyUrl
#nsSslServerName

# This really needs to be in place for it to be a proxy certificate.
proxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo

####################################################################
[ tsa ]

default_tsa = tsa_config1	# the default TSA section

[ tsa_config1 ]

# These are used by the TSA reply generation only.
dir		= ./data		# TSA root directory
serial		= $dir/tsaserial	# The current serial number (mandatory)
crypto_device	= builtin		# OpenSSL engine to use for signing
signer_cert	= $dir/cert/cert_a # The TSA signing certificate
					# (optional)
certs		= $dir/cert/cert_r	# Certificate chain to include in reply
					# (optional)
signer_key	= $dir/private/privkey_a # The TSA private key (optional)

default_policy	= tsa_policy1		# Policy if request did not specify it
					# (optional)
other_policies	= tsa_policy2, tsa_policy3	# acceptable policies (optional)
digests		= sha256 # Acceptable message digests (mandatory)
signer_digest = sha256
accuracy	= secs:1, millisecs:500, microsecs:100	# (optional)
clock_precision_digits  = 0	# number of digits after dot. (optional)
ordering		= yes	# Is ordering defined for timestamps?
				# (optional, default: no)
tsa_name		= yes	# Must the TSA name be included in the reply?
				# (optional, default: no)
ess_cert_id_chain	= no	# Must the ESS cert id chain be included?
				# (optional, default: no)
